# ===================================================================
# CONFIGURAÇÕES DO SERVIDOR
# ===================================================================
server.port=8080

# ===================================================================
# CONFIGURAÇÕES DO BANCO DE DADOS (DataSource)
# ===================================================================
# URL de conexão JDBC para o MySQL.
# Altere 'checkinexpress_db' se o nome do seu banco for diferente.
# Altere 'root' e 'password' para seu usuário e senha do MySQL.
spring.datasource.url=jdbc:mysql://localhost:3306/checkinexpress_db?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=PUC@1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===================================================================
# CONFIGURAÇÕES DO JPA / HIBERNATE
# ===================================================================
# ddl-auto=update: Permite que o Hibernate atualize o schema do banco (tabelas)
# com base nas suas classes @Entity a cada inicialização.
spring.jpa.hibernate.ddl-auto=update

# Mostra no console os comandos SQL gerados pelo Hibernate. Ótimo para debug.
spring.jpa.show-sql=true

# Formata o SQL mostrado no console para ficar mais legível.
spring.jpa.properties.hibernate.format_sql=true

# Linha crucial: Informa explicitamente ao Hibernate para usar o dialeto do MySQL.
# Isso resolve o erro "Unable to determine Dialect".
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# ===================================================================
# CONFIGURAÇÕES DE SEGURANÇA (JWT)
# ===================================================================
# Chave secreta para assinar e validar os tokens JWT.
# IMPORTANTE: Em produção, use uma chave muito mais longa, complexa e
# guardada de forma segura (ex: variáveis de ambiente).
jwt.secret=uma_chave_super_secreta_de_no_minimo_32_caracteres

